#define DSWOpt(var, descr) DOpt(#var, descr, var)

DOpt("all", "      - all kinds of warnings & errors", AllErrors = WarningL0 = WarningL0d = WarningL1)
DOpt("allerr", "   - all kinds of fatal errors", AllErrors)
DOpt("dbg", "      - all debug messages (requires debug build), +`all'", DbgMsg = AllErrors = WarningL0 = WarningL0d = WarningL1)
DOpt("dbgonly", "  - all debug messages (requires debug build), w/o `all'", DbgMsg)
DSWOpt(Details, "  - additional details for a warning or error message")
DSWOpt(Syntax, "   - syntax errors in ymake.conf, ya.make-files")
DSWOpt(BadSrc, "   - no extension-based rule for a file")
DSWOpt(BadMacro, " - calling undefined macro")
DSWOpt(Garbage, "  - useless (for ymake) statements in ya.make-file")
DSWOpt(UnkStatm, " - unknown statements in ya.make-file")
DSWOpt(UnkMod, "   - unknown modifiers in ya.make-file (we currently ignore them)")
DSWOpt(Style, "    - bad coding style in ya.make-file")
DSWOpt(MacroUse, " - problems with macro usage")
DSWOpt(BadFile, "  - unexpected problems with reading files (treated as non-existent)")
DSWOpt(UndefVar, " - use of undefined variables in macros")
DSWOpt(BadInput, " - some input files can not be used for a target")
DSWOpt(NoInput, "  - no input files for a target")
DSWOpt(NoOutput, " - no output files for a target")
DSWOpt(NoCmd, "    - no build command for a target")
DSWOpt(UserErr, "  - user fatal messages - MESSAGE(FATAL_ERROR ...)")
DSWOpt(UserWarn, " - user fatal messages - MESSAGE()")
DSWOpt(KnownBug, " - known bugs in ymake core")
DSWOpt(BadDir, "   - empty or non-existent directory in PEERDIR or tool")
DSWOpt(BadAuto, "  - 'auto' output of a command is bad, still used somewhere")
DSWOpt(DupSrc, "   - show duplicated entries in SRCS or \"auto\" output of a command")
DSWOpt(BlckLst, "  - report used files and dirs from the prohibited projects")
DSWOpt(IslPrjs, "  - report used isolated projects files and dirs from another project")
DOpt("recurs", "   - list directories activated via RECURSE/SUBDIR", ShowRecurses)
DOpt("allbadrecurses", " - detect all bad recurses", ShowAllBadRecurses)
DOpt("nomain", "   - none of inputs/outputs are marked as main", NoMain)
DOpt("ChkDepDirExists", " - detect dependency restrictions on non-directories", ChkDepDirExists)
DOpt("pedantic-licenses", " - show extra diagnostics of possibly incorrect arguments of LICENSE or RESTRICT_LICANSES macros", PedanticLicenses)
DSWOpt(BUID, "     - show cases leading to UIDs blinking")
DOpt("allloops", " - loop detector: detect all loop types", ShowAllLoops)
DOpt("buildloops", " - loop detector: detect loop types", ShowBuildLoops)
DOpt("dirloops", " - loop detector: detect loops with directories (detect PEERDIR loops)", ShowDirLoops)
DOpt("mkcmd", "    - debug: GetCommandFromGraph & co.", MkCmd)
DSWOpt(ChkPeers, " - find and display PEERDIRS that are likely missing by mistake")
DSWOpt(BadIncl, "  - missing or unresolved include files")
DSWOpt(NATR, "     - debug: TNodeAddCtx trace")
DSWOpt(V, "        - debug: verbose messages")
DOpt("VV", "       - debug: very verbose messages", VV = V)
DSWOpt(DG, "       - debug: TDepGraph stream")
DSWOpt(CVar, "     - debug: ya.make-layer variable processing")
DSWOpt(ToDo, "     - debug: something not done messages")
DSWOpt(Incl, "     - debug: errors of include-file parser")
DSWOpt(LEX, "      - debug: diagnostics of lexer.rl6 (ya.make syntax parser)")
DSWOpt(SUBST, "    - debug: macro expansion")
DSWOpt(Dev, "      - debug: random diagnostics from relatively new code")
DSWOpt(Make, "     - debug: internal make messages")
DSWOpt(Loop, "     - debug: loop detector diagnostics")
DSWOpt(GUpd, "     - debug: graph update / EditNode diagnostics")
DSWOpt(Conf, "     - debug: ymake.conf parser (confreader.rl6)")
DSWOpt(Mkfile, "   - debug: ya.make parser (lexer.rl6)")
DSWOpt(FU, "       - debug: during graph update, print new and updated files ")
DSWOpt(IPRP, "     - debug: intent/induced property propagation")
DSWOpt(IPUR, "     - debug: graph rescan for intent/induced")
DSWOpt(PATH, "     - debug: input and output file location")
DSWOpt(Sln, "      - solution generation")
DSWOpt(UIDs, "     - debug: print UIDs evolution")
DSWOpt(Star, "     - debug: print star-like subgraph related messages")
DSWOpt(Iter, "     - debug: print graph iteration steps")

#undef DOpt
