syntax = "proto3";

import public "devtools/local_cache/psingleton/proto/known_service.proto";

package NToolsCache;

service TToolsCache {
    /// Main rpc handler.
    rpc Notify(TResourceUsed) returns (TStatus);
    /// Updated service.
    rpc NotifyNewService(TServiceStarted) returns (TServiceResponse);
    /// Force GC in emergency.
    rpc ForceGC(TForceGC) returns (TStatus);
    /// Lock resource with special == 0, see db.sql.
    rpc LockResource(TSBResource) returns (TStatus);
    /// Unlock resource, see db.sql.
    rpc UnlockSBResource(TSBResource) returns (TStatus);
    /// Unlock all resources marked with special == 0
    rpc UnlockAllResources(NUserService.TPeer) returns (TStatus);
    /// GetStat
    rpc GetTaskStats(NUserService.TPeer) returns (TTaskStatus);
}

message TSBResource {
    string Path = 1;
    string SBId = 2;
}

message TResourceUsed {
    NUserService.TPeer Peer = 1;
    string Pattern = 2;
    string Bottle = 3;
    TSBResource Resource = 4;
}

message TServiceInfo {
    int32 Version = 1;
    TSBResource Resource = 2;
    // base64-encoded {"env": {kv}, "cwd": "string", "args": []}
    string EnvCwdArgs = 3;
    string Name = 4;
}

message TServiceStarted {
    NUserService.TPeer Peer = 1;
    TServiceInfo Service = 2;
    bool ForceReplacement = 3;
}

message TForceGC {
    NUserService.TPeer Peer = 1;
    uint64 TargetSize = 2;
    // TODO:
    bool RemoveSpecial = 3;
    // TODO:
    bool RemoveDB = 4;
}

message TStatus {
    uint64 TotalKnownSize = 1;
    uint64 TotalKnownSizeLocked = 2;
    int32 NonComputedCount = 3;
    bool Master = 4;
    uint64 TotalDBSize = 5;
    int32 ToolCount = 6;
    int32 ProcessesCount = 7;
}

message TServiceResponse {
    TStatus Status = 1;
    TServiceInfo Service = 2;
}

message TTaskStatus {
    uint64 TotalKnownSize = 1;
    uint64 TotalKnownSizeLocked = 2;
    int32 NonComputedCount = 3;
    int32 LockedCount = 4;
}
